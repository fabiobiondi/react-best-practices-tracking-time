// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Match Snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <li
        className="list-group-item list-group-item-action bg-warning text-dark actived"
        onClick={[Function]}
    >
         ( 
        1
         )
        <i
            className="fa fa-trash icon pull-right"
            onClick={[Function]}
        />
    </li>
    <li
        className="list-group-item list-group-item-action"
        onClick={[Function]}
    >
         ( 
        2
         )
        <i
            className="fa fa-trash icon pull-right"
            onClick={[Function]}
        />
    </li>
</div>,
  "nodes": Array [
    <div>
      <li
            className="list-group-item list-group-item-action bg-warning text-dark actived"
            onClick={[Function]}
      >
             ( 
            1
             )
            <i
                  className="fa fa-trash icon pull-right"
                  onClick={[Function]}
            />
      </li>
      <li
            className="list-group-item list-group-item-action"
            onClick={[Function]}
      >
             ( 
            2
             )
            <i
                  className="fa fa-trash icon pull-right"
                  onClick={[Function]}
            />
      </li>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <Activities
        active={
                Object {
                        "id": "1",
                      }
        }
        list={
                Array [
                        Object {
                          "id": "1",
                        },
                        Object {
                          "id": "2",
                        },
                      ]
        }
>
        bla bla
</Activities>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "active": Object {
            "id": "1",
          },
          "children": "bla bla",
          "list": Array [
            Object {
              "id": "1",
            },
            Object {
              "id": "2",
            },
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <li
                    className="list-group-item list-group-item-action bg-warning text-dark actived"
                    onClick={[Function]}
          >
                     ( 
                    1
                     )
                    <i
                              className="fa fa-trash icon pull-right"
                              onClick={[Function]}
                    />
          </li>
          <li
                    className="list-group-item list-group-item-action"
                    onClick={[Function]}
          >
                     ( 
                    2
                     )
                    <i
                              className="fa fa-trash icon pull-right"
                              onClick={[Function]}
                    />
          </li>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <li
                    className="list-group-item list-group-item-action bg-warning text-dark actived"
                    onClick={[Function]}
          >
                     ( 
                    1
                     )
                    <i
                              className="fa fa-trash icon pull-right"
                              onClick={[Function]}
                    />
          </li>
          <li
                    className="list-group-item list-group-item-action"
                    onClick={[Function]}
          >
                     ( 
                    2
                     )
                    <i
                              className="fa fa-trash icon pull-right"
                              onClick={[Function]}
                    />
          </li>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Activities
    active={
        Object {
            "id": "1",
          }
    }
    list={
        Array [
            Object {
              "id": "1",
            },
            Object {
              "id": "2",
            },
          ]
    }
>
    bla bla
</Activities>,
}
`;
